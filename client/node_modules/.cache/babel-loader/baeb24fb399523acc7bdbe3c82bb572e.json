{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer\n});\nimport { cartReducer } from './reducers/cartReducers';\nconst reducers = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/garyliggins/Desktop/udemyClasses/ecommerce_react/client/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","reducer","productList","productDetails","cartReducer","reducers","cart","cartItemsFromStorage","localStorage","getItem","JSON","parse","initialState","cartItems","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,4BAA1D;AAGA,MAAMC,OAAO,GAAGN,eAAe,CAAC;AAC5BO,EAAAA,WAAW,EAAEH,kBADe;AAE5BI,EAAAA,cAAc,EAAEH;AAFY,CAAD,CAA/B;AAIA,SAAQI,WAAR,QAA0B,yBAA1B;AAEA,MAAMC,QAAQ,GAAGV,eAAe,CAAC;AAC7BO,EAAAA,WAAW,EAAEH,kBADgB;AAE7BI,EAAAA,cAAc,EAAEH,qBAFa;AAG7BM,EAAAA,IAAI,EAAEF;AAHuB,CAAD,CAAhC;AAMA,MAAMG,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,EAAjH;AAEA,MAAMG,YAAY,GAAG;AACjBN,EAAAA,IAAI,EAAE;AAAEO,IAAAA,SAAS,EAAEN;AAAb;AADW,CAArB;AAIA,MAAMO,UAAU,GAAG,CAACjB,KAAD,CAAnB;AAEA,MAAMkB,KAAK,GAAGrB,WAAW,CAACO,OAAD,EAAUW,YAAV,EAAwBd,mBAAmB,CAACF,eAAe,CAAC,GAAGkB,UAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers'\n\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n})\nimport {cartReducer} from './reducers/cartReducers'\n\nconst reducers = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst initialState = {\n    cart: { cartItems: cartItemsFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store"]},"metadata":{},"sourceType":"module"}